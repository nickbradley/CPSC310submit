user  nginx;
worker_processes  1;

#error_log  /var/log/nginx/error.log warn;
error_log  /dev/stdout info;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;
    access_log  /dev/stdout main;


    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;


    upstream web-server {
      # Docker compose adds "app" to the hosts file
      # Note: that "app" is the service name defined in docker-compose.yml
      server app:4430;
    }
    upstream db-server {
      # Docker compose adds "db" to the hosts file
      # Note: that "db" is the service name defined in docker-compose.yml
      server db:5984;
    }

    server {
      listen 443 ssl;
      server_name localhost;

      ssl_certificate /etc/ssl/certs/cpsc310-2016Fall.crt;
      ssl_certificate_key /etc/ssl/certs/cpsc310-2016Fall.key;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers HIGH:!aNULL:!MD5;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;

      # Forward to the node app
      location = /cpsc310/test-service {
        proxy_pass https://web-server;

      }

      # Forward to couchdb
      location /cpsc310/db/ {
        
          proxy_pass http://db-server;
          rewrite ^/cpsc310/db/(.*)$ /$1 last;
        
        # Regex needed to preserve URL encoded (specifically, %2F encoding of / so that Futon will work)
        #if ($request_uri ~* "/cpsc310/db/(.*)") {
        #  proxy_pass http://db-server/$1;
        #}
      }
    }

    include /etc/nginx/conf.d/*.conf;
}
